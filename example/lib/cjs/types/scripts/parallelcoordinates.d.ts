export declare class SteerableParcoords {
    private data;
    private newFeatures;
    private width;
    private height;
    private padding;
    private brushWidth;
    private filters;
    features: any[];
    xScales: any;
    dragging: any;
    private featureAxisG;
    yScales: {};
    private active;
    private inactive;
    private newDataset;
    yBrushes: {};
    yAxis: {};
    private dimensions;
    constructor(data?: any, newFeatures?: any);
    loadCSV(csv: any): void;
    getData(): any;
    setDimensions(newDimension: any): void;
    invert(dimension: any): void;
    getInversionStatus(dimension: any): void;
    move(dimension: any, toRightOf: any, A: any): void;
    getDimensionPositions(): void;
    getFilter(dimension: any): void;
    setFilter(dimension: any): void;
    getSelected(): void;
    select(records: any): void;
    saveAsSVG(): void;
    position(this: any, d: any, parcoords: any): any;
    onDragStartEventHandler(parcoords: any): (d: any) => void;
    onDragEventHandler(parcoords: any): (d: any) => void;
    transition(g: any): any;
    onDragEndEventHandler(parcoords: any): (d: any) => void;
    onInvert(parcoords: any): (event: any, d: any) => void;
    prepareData(): void;
    setupScales(): void;
    setupYAxis(): {};
    setupBrush(): {};
    onBrushEventHandler(parcoords: any): (event: any, features: any) => void;
    applyFilters(): void;
    selected(d: any): boolean;
    private initContent;
    generateSVG(): void;
    linePath(d: any): any;
    highlight(d: any): void;
    doNotHighlight(d: any): void;
}

export default class SteerableParcoords {
    removeDuplicateColumnNames(value: string): string;
    checkIfDuplicatesExists(value: string): boolean;
    loadCSV(csv: string): any;
    setDimensions(newDimension: any): void;
    invert(dimension: any, newFeatures: any, xScales: any, yScales: any, yAxis: any): void;
    getInversionStatus(dimension: any): void;
    move(dimension: any, toRightOf: any, A: any): void;
    getDimensionPositions(): void;
    getFilter(dimension: any): void;
    setFilter(dimension: any): void;
    getSelected(): void;
    select(event: any, d: any): void;
    saveAsSVG(): void;
    position(d: any, dragging: any, xScales: any): any;
    onDragStartEventHandler(xScales: any, inactive: any, dragging: any): (d: any) => void;
    onDragEventHandler(newFeatures: any, xScales: any, yScales: any, dragging: any, active: any, featureAxisG: any, width: any): (d: any) => void;
    transition(g: any): any;
    onDragEndEventHandler(newFeatures: any, xScales: any, yScales: any, dragging: any, inactive: any, active: any): (d: any) => void;
    onInvert(newFeatures: any, xScales: any, yScales: any, yAxis: any): (event: any, d: any) => void;
    prepareData(data: any, newFeatures: any): any[][];
    setupYScales(height: any, padding: any, features: any, newDataset: any): {};
    setupXScales(width: any, padding: any, features: any): any;
    setupYAxis(features: any[], yScales: any, newDataset: any): {};
    setupBrush(yScales: any): {};
    onBrushEventHandler(filters: any, yScales: any): (event: any, features: any) => void;
    applyFilters(filters: any): void;
    selected(d: any, filters: any): boolean;
    initContent(): void;
    generateSVG(content: any, newFeatures: any): void;
    linePath(d: any, newFeatures: any, xScales: any, yScales: any): any;
    highlight(data: any): any;
    doNotHighlight(event: any, i: any, selected_path: any): void;
    createTooltipForPathLine(tooltip_text: any, tooltip_path: any, event: any): any;
    getAllPointerEventsData(event: any): any[];
}
export declare const loadCSV: (csv: string) => any, invert: (dimension: any, newFeatures: any, xScales: any, yScales: any, yAxis: any) => void, setDimensions: (newDimension: any) => void, generateSVG: (content: any, newFeatures: any) => void, removeDuplicateColumnNames: (value: string) => string, checkIfDuplicatesExists: (value: string) => boolean, select: (event: any, d: any) => void, position: (d: any, dragging: any, xScales: any) => any, onDragStartEventHandler: (xScales: any, inactive: any, dragging: any) => (d: any) => void, onDragEventHandler: (newFeatures: any, xScales: any, yScales: any, dragging: any, active: any, featureAxisG: any, width: any) => (d: any) => void, transition: (g: any) => any, onDragEndEventHandler: (newFeatures: any, xScales: any, yScales: any, dragging: any, inactive: any, active: any) => (d: any) => void, onInvert: (newFeatures: any, xScales: any, yScales: any, yAxis: any) => (event: any, d: any) => void, prepareData: (data: any, newFeatures: any) => any[][], setupYScales: (height: any, padding: any, features: any, newDataset: any) => {}, setupXScales: (width: any, padding: any, features: any) => any, setupYAxis: (features: any[], yScales: any, newDataset: any) => {}, setupBrush: (yScales: any) => {}, onBrushEventHandler: (filters: any, yScales: any) => (event: any, features: any) => void, applyFilters: (filters: any) => void, selected: (d: any, filters: any) => boolean, initContent: () => void, linePath: (d: any, newFeatures: any, xScales: any, yScales: any) => any, highlight: (data: any) => any, doNotHighlight: (event: any, i: any, selected_path: any) => void, createTooltipForPathLine: (tooltip_text: any, tooltip_path: any, event: any) => any, getAllPointerEventsData: (event: any) => any[];
